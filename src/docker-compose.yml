version: "3.4"

services:

  postgres:
    image: postgres:12
    restart: always
    volumes:
      - database:/var/lib/postgresql/data
    expose:
      - 5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=uroflow
      - POSTGRES_DB=uroflow

  model:
    image: python:3.7
    restart: always
    volumes:
      - ./pytorch_model:/usr/src/myapp
      - blob:/usr/src/myapp/blob
    working_dir: /usr/src/myapp
    expose:
      - 8080
    environment:
      - PREPROCESS_FILE=uroflow_fwdpass_20200311.py
      - MODEL_FILE=Water.pt
    command: /bin/bash -c "apt update; apt install -y ffmpeg; python3 -m pip install -r requirements.txt; gunicorn --bind 0.0.0.0:8080 app:app"

  api:
    image: node:12
    restart: always
    volumes:
      - ./api:/usr/src/myapp
      - blob:/usr/src/myapp/blob
    working_dir: /usr/src/myapp
    ports:
      - 3010:3010
    environment:
      - NODE_ENV=production
      - MODEL_URL=http://model:8080?id=
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=uroflow
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=uroflow
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=admin
    command: /bin/bash -c "npm i; npm run start"
    depends_on:
      - postgres
      - model

  web:
    image: node:12
    restart: always
    volumes:
      - ./webapp:/usr/src/myapp
    working_dir: /usr/src/myapp
    ports:
      - 3011:3000
    environment:
      - API_URL=http://api:3010/
    command: /bin/bash -c "npm i; npm run start"
    depends_on:
      - api

volumes:

  database:

  blob:
